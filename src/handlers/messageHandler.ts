import { Context } from "telegraf";
import SessionStorage from "../utils/session-storage";
import { JsonLogicConverterObj } from "../converters/JsonLogicConverter";

class MessageHandler {
	async handleStart(ctx: Context): Promise<void> {
		const welcomeMessage = `
	  ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VKU Analyzer Bot!
	  
	  üìä –Ø –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é JSON —Ñ–∞–π–ª—ã —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π —ç–∫—Ä–∞–Ω–æ–≤ –∏ –ø—Ä–∞–≤–∏–ª –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
	  
	  üìÅ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ JSON —Ñ–∞–π–ª, –∏ —è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é:
	  ‚Ä¢ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –≤—Å–µ—Ö —ç–∫—Ä–∞–Ω–æ–≤
	  ‚Ä¢ –ê–Ω–∞–ª–∏–∑ –ø—É—Ç–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
	  ‚Ä¢ –í—ã—è–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∏–∂–∏–º—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤
	  ‚Ä¢ –û–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
	  
	  üìã –ü—Ä–∏–º–µ—Ä –æ–∂–∏–¥–∞–µ–º–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:
	  {
		"screens": [...],
		"screenRules": {...},
		"cycledScreenRules": {...}
	  }
	  
	  ‚öôÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:
	  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /jsonlogic —á—Ç–æ–±—ã –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —É—Å–ª–æ–≤–∏–µ –≤ JsonLogic —Ñ–æ—Ä–º–∞—Ç
		(–Ω–∞–ø—Ä–∏–º–µ—Ä: \`(answer.q_represent.value == –ì–ª–∞–≤–∞1) and (answer.q_represent.value == –ì–ª–∞–≤–∞2) => –û—Ç–≤–µ—Ç1;\`)
	  
	  ‚ùì –î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help
		`;

		await ctx.reply(welcomeMessage, { parse_mode: "Markdown" });
	}

	async handleHelp(ctx: Context): Promise<void> {
		const helpMessage = `
	  üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:
	  
	  1. üì§ –û—Ç–ø—Ä–∞–≤—å—Ç–µ JSON —Ñ–∞–π–ª —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π —ç–∫—Ä–∞–Ω–æ–≤
	  2. ‚è≥ –î–æ–∂–¥–∏—Ç–µ—Å—å –∞–Ω–∞–ª–∏–∑–∞ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤)
	  3. üì• –ü–æ–ª—É—á–∏—Ç–µ Excel –æ—Ç—á–µ—Ç—ã —Å –∞–Ω–∞–ª–∏–∑–æ–º
	  
	  üìä –§–æ—Ä–º–∏—Ä—É–µ–º—ã–µ –æ—Ç—á–µ—Ç—ã:
	  ‚Ä¢ diagnostics.xlsx - –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö —ç–∫—Ä–∞–Ω–æ–≤
	  ‚Ä¢ paths.xlsx - –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
	  ‚Ä¢ unreachable.xlsx - –Ω–µ–¥–æ—Å—Ç–∏–∂–∏–º—ã–µ —ç–∫—Ä–∞–Ω—ã
	  ‚Ä¢ summary.xlsx - —Å–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
	  ‚Ä¢ conflicts.xlsx - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è —É—Å–ª–æ–≤–∏—è 
	  ‚Ä¢ contradictions.xlsx - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–≤—ã–µ —É—Å–ª–æ–≤–∏—è
	  
	  ‚öôÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
	  ‚Ä¢ /jsonlogic ‚Äî –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —É—Å–ª–æ–≤–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç JsonLogic  
		 –ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞:  
		 \`\`\`
		 (answer.q_represent.value == –ì–ª–∞–≤–∞1) and (answer.q_represent.value == –ì–ª–∞–≤–∞2) => –û—Ç–≤–µ—Ç1;
		 answer.q_represent.value == –ì–ª–∞–≤–∞4 => –û—Ç–≤–µ—Ç2
		 \`\`\`
		 –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–µ—Ä–Ω—ë—Ç—Å—è –≤ JsonLogic —Ñ–æ—Ä–º–∞—Ç–µ.
	  
	  ‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
	  ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º—ã—Ö –ø—É—Ç–µ–π: 10,000
	  ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã JSON
		`;

		await ctx.reply(helpMessage, { parse_mode: "Markdown" });
	}

	async handleText(ctx: Context): Promise<void> {

		const chatId = ctx.chat?.id!;
		const session = SessionStorage.getByChatId(chatId);
		const userInput = ctx.text;

		// –ï—Å–ª–∏ –∂–¥—ë–º –≤–≤–æ–¥ –¥–ª—è JsonLogic
		if (session?.awaitingJsonLogic && userInput) {
			try {
				const result = JsonLogicConverterObj.toJsonLogic(userInput);

				await ctx.reply("‚úÖ –í–∞—à JsonLogic:");
				await ctx.reply("```\n" + result + "\n```", {
					parse_mode: "MarkdownV2",
				});

				// –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
				session.awaitingJsonLogic = false;
			} catch (error: any) {
				await ctx.reply("‚ö† –û—à–∏–±–∫–∞: " + error.message);
			}
			return;
		}

		// –ü–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		await ctx.reply("üìÑ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ JSON —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞");
	}
}

export const messageHandler = new MessageHandler()